# LinuxCNC HAL file for XBox 360 controller to jog and zero axis
# https://www.sdoherty.com/2020/07/using-xbox-controller-with-linuxcnc.html

loadusr -W hal_input -KRAL Microsoft X-Box 360  
loadrt mult2 count=2
addf mult2.0 servo-thread
addf mult2.1 servo-thread

# Joystick-based speed selection
# https://forum.linuxcnc.org/38-general-linuxcnc-questions/36532-joystick-not-working-after-all-axis-are-homed
loadrt or2 count=1
loadrt mux2 count=1
addf or2.0 servo-thread
addf mux2.0 servo-thread

# set the jog speed for the joypad again use numbers that make sense for your machine
setp mux2.0.in0 1
setp mux2.0.in1 20

# the following does the magic of setting the jog speeds
net remote-speed-slow or2.0.in0 input.0.btn-b
net remote-speed-fast or2.0.in1 input.0.btn-b-not
#net joy-speed-1 mux2.0.sel0 <= input.0.btn-b
#net joy-speed-2 mux2.0.sel1 <= input.0.btn-b-not
net joy-speed-final halui.joint.jog-speed <= mux2.0.out


# Joystick output is a float in the range [-1..1]
# Ignore initial small values as joystick centre is not exactly zero
setp halui.axis.jog-deadband 0.2

# Set axis jog speed
setp halui.axis.jog-speed  1000

# Map right joystick to X, Y axis
net jog-x-analog halui.axis.x.analog <= input.0.abs-rx-position

setp mult2.1.in0 -1
net y-jog-input mult2.1.in1 <= input.0.abs-ry-position
net jog-y-analog halui.axis.y.analog <= mult2.1.out


# Map left joystick Up/Down to Z axis. Need to change sign of input so Z axis moves in correct direction
setp mult2.0.in0 -1
net z-jog-input mult2.0.in1 <= input.0.abs-y-position
net jog-z-analog halui.axis.z.analog <= mult2.0.out

# Map X, Y, A buttons to zero X, Y, Z offset (G10 L20 P1 X0/Y0/Z0 defined in [HALUI] section of ini file)
net zero-x halui.mdi-command-00 <= input.0.btn-x
net zero-y halui.mdi-command-01 <= input.0.btn-y
net zero-z halui.mdi-command-02 <= input.0.btn-a
